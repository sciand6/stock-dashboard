{"version":3,"sources":["slices/inputSlice.js","utils/InputValidation.js","utils/Requests.js","utils/StockDataProcessessing.js","utils/General.js","slices/stockSlice.js","components/TickerInput.js","components/PageList.js","components/Stock.js","components/StockList.js","components/PageAmount.js","components/Main.js","images/sampleinput.png","images/sampleoutput.png","components/About.js","App.js","storeConfig/store.js","index.js"],"names":["inputSlice","createSlice","name","initialState","lowdate","highdate","currenttickers","pagesarr","activeindex","pageamount","reducers","saveInput","state","action","payload","updatePages","updateActiveIndex","updatePageAmount","actions","validateInput","inp","tickersinput","dateValidation","isError","error","isNaN","Date","parse","checkDates","tickerValidation","checkTickers","getStocks","index","pagearr","tickerArr","inputString","i","length","opts","method","headers","body","JSON","stringify","tickers","slice","fetch","setChartData","ticker","chartData","numberFormat","yAxis","offset","labels","formatter","format","this","value","x","style","color","position","align","tooltip","shared","y","moment","plotOptions","series","showInNavigator","gapSize","title","text","chart","height","credits","enabled","legend","xAxis","type","rangeSelector","buttons","count","selected","data","valueDecimals","getChartData","property","chartItem","date","getTime","adjClose","push","tickersToPages","tickersArr","amountOfPages","j","temp","result","processStockData","res","Intl","NumberFormat","currency","arr","failed","obj","close","high","Math","max","apply","map","o","low","min","roi","configPrice","requestError","response","ok","Error","statusText","json","compare","key","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","stockSlice","stockdata","loading","setLoading","setStocks","setError","TickerInput","dispatch","useDispatch","useState","setlowdate","sethighdate","settickersinput","useSelector","input","submitTickers","tickerParams","toISOString","split","pageAmount","updateState","then","setTimeout","sort","updateStockState","catch","htmlFor","className","placeholder","id","onChange","e","target","onClick","PageList","updateStocks","Stock","stock","toFixed","StockList","activesortorder","setactivesortorder","activesort","setactivesort","sortStocks","sortOrder","stocksSorted","config","PageAmount","activepageamount","setactivepageamount","setPageAmount","amount","Main","About","alt","src","sampleinput","sampleoutput","App","to","path","element","store","configureStore","reducer","inputReducer","stockReducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.befc9ce6.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  lowdate: \"\",\n  highdate: \"\",\n  currenttickers: [],\n  pagesarr: [],\n  activeindex: 0,\n  pageamount: 10,\n};\n\nexport const inputSlice = createSlice({\n  name: \"input\",\n  initialState,\n  reducers: {\n    saveInput: (state, action) => {\n      state.lowdate = action.payload.lowdate;\n      state.highdate = action.payload.highdate;\n      state.currenttickers = action.payload.currenttickers;\n    },\n    updatePages: (state, action) => {\n      state.pagesarr = action.payload.pagesarr;\n    },\n    updateActiveIndex: (state, action) => {\n      state.activeindex = action.payload.activeindex;\n    },\n    updatePageAmount: (state, action) => {\n      state.pageamount = action.payload.pageamount;\n    },\n  },\n});\n\nexport const { saveInput, updatePages, updateActiveIndex, updatePageAmount } =\n  inputSlice.actions;\n\nexport default inputSlice.reducer;\n","function validateInput(inp) {\n  const { lowdate, highdate, tickersinput } = inp;\n  var dateValidation = checkDates(lowdate, highdate);\n  var tickerValidation = checkTickers(tickersinput);\n  if (dateValidation.isError) {\n    return dateValidation;\n  }\n  if (tickerValidation.isError) {\n    return tickerValidation;\n  }\n  return { isError: false, error: \"\" };\n}\n\nfunction checkDates(lowdate, highdate) {\n  if (!lowdate) {\n    return { isError: true, error: \"Please enter a valid from date.\" };\n  }\n  if (!highdate) {\n    return { isError: true, error: \"Please enter a valid to date.\" };\n  }\n  if (isNaN(Date.parse(lowdate))) {\n    return { isError: true, error: \"Please enter a valid from date.\" };\n  }\n  if (isNaN(Date.parse(highdate))) {\n    return { isError: true, error: \"Please enter a valid to date.\" };\n  }\n  if (Date.parse(highdate) < Date.parse(lowdate)) {\n    return {\n      isError: true,\n      error: \"Your to date is greater than your from date.\",\n    };\n  }\n\n  return { isError: false, error: \"\" };\n}\n\nfunction checkTickers(tickersinput) {\n  if (!tickersinput) {\n    return { isError: true, error: \"Please enter a valid list of tickers.\" };\n  }\n  return { isError: false, error: \"\" };\n}\n\nexport { checkDates, checkTickers, validateInput };\n","function getStocks(index, pagearr, lowdate, highdate) {\n  const tickerArr = pagearr[index];\n  var inputString = \"\";\n  for (let i = 0; i < tickerArr.length; i++) {\n    inputString += tickerArr[i] + \",\";\n  }\n  const opts = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      tickers: inputString.slice(0, -1),\n      lowdate: lowdate,\n      highdate: highdate,\n    }),\n  };\n  return fetch(\"/apiv1/getStockData/\", opts);\n}\n\nexport { getStocks };\n","import moment from \"moment\";\n\nfunction setChartData(ticker, chartData, numberFormat) {\n  return {\n    yAxis: [\n      {\n        offset: 20,\n\n        labels: {\n          formatter: function () {\n            return numberFormat.format(this.value);\n          },\n          x: -15,\n          style: {\n            color: \"#000\",\n            position: \"absolute\",\n          },\n          align: \"left\",\n        },\n      },\n    ],\n    tooltip: {\n      shared: true,\n      formatter: function () {\n        return (\n          numberFormat.format(this.y, 0) +\n          \"</b><br/>\" +\n          moment(this.x).format(\"MMMM Do YYYY, h:mm\")\n        );\n      },\n    },\n    plotOptions: {\n      series: {\n        showInNavigator: true,\n        gapSize: 6,\n      },\n    },\n    title: {\n      text: `${ticker}`,\n    },\n    chart: {\n      height: 500,\n    },\n\n    credits: {\n      enabled: false,\n    },\n\n    legend: {\n      enabled: true,\n    },\n    xAxis: {\n      type: \"date\",\n    },\n    rangeSelector: {\n      buttons: [\n        {\n          type: \"day\",\n          count: 1,\n          text: \"1d\",\n        },\n        {\n          type: \"day\",\n          count: 7,\n          text: \"7d\",\n        },\n        {\n          type: \"month\",\n          count: 1,\n          text: \"1m\",\n        },\n        {\n          type: \"month\",\n          count: 3,\n          text: \"3m\",\n        },\n        {\n          type: \"all\",\n          text: \"All\",\n        },\n      ],\n      selected: 4,\n    },\n    series: [\n      {\n        name: \"Price\",\n        type: \"spline\",\n\n        data: chartData,\n        tooltip: {\n          valueDecimals: 2,\n        },\n      },\n    ],\n  };\n}\n\nfunction getChartData(property) {\n  let chartData = [];\n  for (var i = property.length - 1; i >= 0; i--) {\n    let chartItem = [\n      new Date(property[i].date).getTime(),\n      property[i].adjClose,\n    ];\n    chartData.push(chartItem);\n  }\n  return chartData;\n}\n\nfunction tickersToPages(tickersArr, amountOfPages) {\n  var j = 0;\n  var temp = [];\n  var result = [];\n\n  for (let i = 0; i < tickersArr.length; i++) {\n    temp.push(tickersArr[i]);\n    if (j === amountOfPages) {\n      result.push(temp);\n      j = 0;\n      temp = [];\n    }\n    j++;\n  }\n\n  if (temp.length > 0) result.push(temp);\n\n  return result;\n}\n\nfunction processStockData(res) {\n  const options = { style: \"currency\", currency: \"USD\" };\n  const numberFormat = new Intl.NumberFormat(\"en-US\", options);\n  var arr = [];\n  var failed = [];\n  for (const property in res) {\n    try {\n      let chartData = getChartData(res[property]);\n      let obj = {\n        ticker: property,\n        close: res[property][0].adjClose,\n        high: Math.max.apply(\n          Math,\n          res[property].map(function (o) {\n            return o.high;\n          })\n        ),\n        low: Math.min.apply(\n          Math,\n          res[property].map(function (o) {\n            return o.low;\n          })\n        ),\n        roi:\n          (res[property][0].adjClose -\n            res[property][res[property].length - 1].adjClose) /\n          res[property][res[property].length - 1].adjClose,\n        configPrice: setChartData(property, chartData, numberFormat),\n      };\n      arr.push(obj);\n    } catch {\n      failed.push(property);\n    }\n  }\n\n  return { failed, arr };\n}\n\nexport { setChartData, getChartData, tickersToPages, processStockData };\n","import { tickersToPages } from \"../utils/StockDataProcessessing\";\n\nfunction requestError(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response.json();\n}\n\nfunction compare(key, order = \"asc\") {\n  return function innerSort(a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0;\n    }\n\n    const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n    const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return order === \"desc\" ? comparison * -1 : comparison;\n  };\n}\n\nfunction buildInput(tickersInput, pageAmount) {\n  const tickerArr = tickersInput.split(\",\");\n  const result = tickersToPages(tickerArr, pageAmount);\n\n  return result;\n}\n\nexport { requestError, compare, buildInput };\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  stockdata: [],\n  loading: false,\n  error: \"\",\n};\n\nexport const stockSlice = createSlice({\n  name: \"stock\",\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload.loading;\n    },\n    setStocks: (state, action) => {\n      state.stockdata = action.payload.stockdata;\n    },\n    setError: (state, action) => {\n      state.error = action.payload.error;\n    },\n  },\n});\n\nexport const { setStocks, setLoading, setError } = stockSlice.actions;\n\nexport default stockSlice.reducer;\n","import React, { useState } from \"react\";\nimport {\n  saveInput,\n  updateActiveIndex,\n  updatePages,\n} from \"../slices/inputSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { validateInput } from \"../utils/InputValidation\";\nimport { getStocks } from \"../utils/Requests\";\nimport { buildInput } from \"../utils/General\";\nimport { requestError, compare } from \"../utils/General\";\nimport { processStockData } from \"../utils/StockDataProcessessing\";\nimport { setStocks, setLoading, setError } from \"../slices/stockSlice\";\n\nfunction TickerInput() {\n  const dispatch = useDispatch();\n  const [lowdate, setlowdate] = useState(\"\");\n  const [highdate, sethighdate] = useState(\"\");\n  const [tickersinput, settickersinput] = useState(\"\");\n  const pageamount = useSelector((state) => state.input.pageamount);\n\n  function updateState(tickerParams, pagesarr) {\n    const { lowdate, highdate, tickersinput } = tickerParams;\n    const currenttickers = tickersinput.split(\",\");\n    dispatch(\n      saveInput({\n        lowdate,\n        highdate,\n        currenttickers,\n      })\n    );\n    dispatch(updatePages({ pagesarr }));\n    dispatch(updateActiveIndex({ activeindex: 0 }));\n  }\n\n  function updateStockState(res) {\n    const { failed, arr } = processStockData(res);\n    dispatch(setStocks({ stockdata: arr.sort(compare) }));\n    dispatch(setLoading({ loading: false }));\n    if (failed.length !== 0) {\n      dispatch(\n        setError({\n          error: \"Couldn't find data for the following stocks: \\n\" + failed,\n        })\n      );\n    }\n  }\n\n  function submitTickers(tickerParams) {\n    if (validateInput(tickerParams).isError) {\n      dispatch(\n        setError({\n          error: validateInput(tickerParams).error,\n        })\n      );\n      return;\n    }\n    let { lowdate, highdate, tickersinput } = tickerParams;\n    lowdate = new Date(lowdate).toISOString().split(\"T\")[0];\n    highdate = new Date(highdate).toISOString().split(\"T\")[0];\n    const result = buildInput(tickersinput, pageamount);\n    updateState(tickerParams, result);\n    dispatch(setLoading({ loading: true }));\n    getStocks(0, result, lowdate, highdate)\n      .then(requestError)\n      .then((res) => {\n        setTimeout(() => {\n          updateStockState(res);\n        }, 3000);\n      })\n      .catch((error) => {\n        dispatch(\n          setError({\n            error,\n          })\n        );\n      });\n  }\n\n  return (\n    <div>\n      <p>Enter Date Range</p>\n      <label htmlFor=\"lowdate\">From:&nbsp;</label>\n      <input\n        className=\"ticker-input\"\n        placeholder=\"2021-01-01\"\n        id=\"lowdate\"\n        type=\"text\"\n        onChange={(e) => setlowdate(e.target.value)}\n      />\n      &nbsp;\n      <label htmlFor=\"highdate\">To:&nbsp;</label>\n      <input\n        className=\"ticker-input\"\n        placeholder=\"2021-07-04\"\n        type=\"text\"\n        onChange={(e) => sethighdate(e.target.value)}\n      />\n      <p>Enter Tickers Separated by Commas</p>\n      <input\n        className=\"ticker-input\"\n        type=\"text\"\n        placeholder=\"FB,AMZN,NFLX,GOOGL\"\n        onChange={(e) => settickersinput(e.target.value)}\n      />\n      <button\n        className=\"btn\"\n        onClick={() => submitTickers({ lowdate, highdate, tickersinput })}\n      >\n        Submit\n      </button>\n    </div>\n  );\n}\n\nexport default TickerInput;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getStocks } from \"../utils/Requests\";\nimport { requestError, compare } from \"../utils/General\";\nimport { processStockData } from \"../utils/StockDataProcessessing\";\nimport { setStocks, setLoading, setError } from \"../slices/stockSlice\";\nimport { updateActiveIndex } from \"../slices/inputSlice\";\n\nfunction PageList() {\n  const dispatch = useDispatch();\n  const activeindex = useSelector((state) => state.input.activeindex);\n  const pagesarr = useSelector((state) => state.input.pagesarr);\n  const lowdate = useSelector((state) => state.input.lowdate);\n  const highdate = useSelector((state) => state.input.highdate);\n\n  function updateStockState(res) {\n    const { failed, arr } = processStockData(res);\n    dispatch(setStocks({ stockdata: arr.sort(compare) }));\n    dispatch(setLoading({ loading: false }));\n    if (failed.length !== 0) {\n      dispatch(\n        setError({\n          error: \"Couldn't find data for the following stocks: \\n\" + failed,\n        })\n      );\n    }\n  }\n\n  function updateStocks(index) {\n    dispatch(setLoading({ loading: true }));\n    getStocks(index, pagesarr, lowdate, highdate)\n      .then(requestError)\n      .then((res) => {\n        setTimeout(() => {\n          updateStockState(res);\n          dispatch(updateActiveIndex({ activeindex: index }));\n        }, 3000);\n      })\n      .catch((error) => {\n        dispatch(\n          setError({\n            error,\n          })\n        );\n      });\n  }\n\n  return (\n    <div>\n      {pagesarr.map((inp, index) => {\n        return (\n          <span\n            className={\n              index === activeindex ? \"page-number-active\" : \"page-number\"\n            }\n            onClick={() => updateStocks(index)}\n          >\n            {index + 1} &nbsp;\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PageList;\n","import React from \"react\";\nimport \"./Stocks.css\";\n\nfunction Stock({ stock }) {\n  return (\n    <div className=\"row\">\n      <div className=\"ticker\">{stock.ticker}</div>\n      <div className={stock.roi > 0 ? \"green\" : \"red\"}>\n        {stock.roi.toFixed(3)}\n      </div>\n      <div className=\"green\">${stock.close}</div>\n      <div className=\"green\">${stock.high}</div>\n      <div className=\"green\">${stock.low}</div>\n    </div>\n  );\n}\n\nexport default Stock;\n","import React, { useState } from \"react\";\nimport Stock from \"./Stock\";\nimport ReactHighcharts from \"react-highcharts/ReactHighstock.src\";\nimport { compare } from \"../utils/General\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setStocks } from \"../slices/stockSlice\";\n\nfunction StockList() {\n  const stockdata = useSelector((state) => state.stock.stockdata);\n  const dispatch = useDispatch();\n  const [activesortorder, setactivesortorder] = useState(true); // true is asc and false is desc\n  const [activesort, setactivesort] = useState(\"\");\n\n  function sortStocks(property) {\n    let sortOrder = activesortorder ? \"asc\" : \"desc\";\n    let stocksSorted = [...stockdata];\n    dispatch(\n      setStocks({ stockdata: stocksSorted.sort(compare(property, sortOrder)) })\n    );\n    setactivesortorder(!activesortorder);\n    setactivesort(property);\n  }\n\n  return (\n    <div>\n      <div className=\"headers\">\n        <div onClick={() => sortStocks(\"ticker\")}>\n          Ticker &nbsp;\n          <i\n            className={\n              activesort === \"ticker\"\n                ? activesortorder\n                  ? \"arrow up\"\n                  : \"arrow down\"\n                : \"\"\n            }\n          ></i>\n        </div>\n        <div onClick={() => sortStocks(\"roi\")}>\n          ROI &nbsp;\n          <i\n            className={\n              activesort === \"roi\"\n                ? activesortorder\n                  ? \"arrow up\"\n                  : \"arrow down\"\n                : \"\"\n            }\n          ></i>\n        </div>\n        <div onClick={() => sortStocks(\"close\")}>\n          Close &nbsp;\n          <i\n            className={\n              activesort === \"close\"\n                ? activesortorder\n                  ? \"arrow up\"\n                  : \"arrow down\"\n                : \"\"\n            }\n          ></i>\n        </div>\n        <div onClick={() => sortStocks(\"high\")}>\n          High &nbsp;\n          <i\n            className={\n              activesort === \"high\"\n                ? activesortorder\n                  ? \"arrow up\"\n                  : \"arrow down\"\n                : \"\"\n            }\n          ></i>\n        </div>\n        <div onClick={() => sortStocks(\"low\")}>\n          Low &nbsp;\n          <i\n            className={\n              activesort === \"low\"\n                ? activesortorder\n                  ? \"arrow up\"\n                  : \"arrow down\"\n                : \"\"\n            }\n          ></i>\n        </div>\n      </div>\n      {stockdata.map((stock) => {\n        return (\n          <div>\n            <Stock stock={stock} />\n            <ReactHighcharts config={stock.configPrice}></ReactHighcharts>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default StockList;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  processStockData,\n  tickersToPages,\n} from \"../utils/StockDataProcessessing\";\nimport {\n  updatePageAmount,\n  updateActiveIndex,\n  updatePages,\n} from \"../slices/inputSlice\";\nimport { getStocks } from \"../utils/Requests\";\nimport { setError, setLoading, setStocks } from \"../slices/stockSlice\";\nimport { requestError, compare } from \"../utils/General\";\n\nfunction PageAmount() {\n  const dispatch = useDispatch();\n  const [activepageamount, setactivepageamount] = useState(10);\n  const currenttickers = useSelector((state) => state.input.currenttickers);\n  const lowdate = useSelector((state) => state.input.lowdate);\n  const highdate = useSelector((state) => state.input.highdate);\n\n  function updateState(pageamount, pagesarr) {\n    dispatch(updatePageAmount({ pageamount }));\n    dispatch(updatePages({ pagesarr }));\n    dispatch(updateActiveIndex({ activeindex: 0 }));\n  }\n\n  function updateStockState(res) {\n    const { failed, arr } = processStockData(res);\n    dispatch(setStocks({ stockdata: arr.sort(compare) }));\n    dispatch(setLoading({ loading: false }));\n    if (failed.length !== 0) {\n      dispatch(\n        setError({\n          error: \"Couldn't find data for the following stocks: \\n\" + failed,\n        })\n      );\n    }\n  }\n\n  function setPageAmount(amount) {\n    if (!currenttickers || currenttickers.length === 0) return;\n    const result = tickersToPages(currenttickers, amount);\n    updateState(amount, result);\n    dispatch(setLoading({ loading: true }));\n    getStocks(0, result, lowdate, highdate)\n      .then(requestError)\n      .then((res) => {\n        updateStockState(res);\n      })\n      .catch((error) => {\n        dispatch(\n          setError({\n            error,\n          })\n        );\n      });\n  }\n\n  return (\n    <div>\n      Results Per Page\n      <p>\n        <span\n          className={\n            activepageamount === 10 ? \"page-number-active\" : \"page-number\"\n          }\n          onClick={() => {\n            setPageAmount(10);\n            setactivepageamount(10);\n          }}\n        >\n          10\n        </span>\n        &nbsp;\n        <span\n          className={\n            activepageamount === 15 ? \"page-number-active\" : \"page-number\"\n          }\n          onClick={() => {\n            setactivepageamount(15);\n            setPageAmount(15);\n          }}\n        >\n          15\n        </span>\n        &nbsp;\n        <span\n          className={\n            activepageamount === 20 ? \"page-number-active\" : \"page-number\"\n          }\n          onClick={() => {\n            setactivepageamount(20);\n            setPageAmount(20);\n          }}\n        >\n          20\n        </span>\n        &nbsp;\n      </p>\n    </div>\n  );\n}\n\nexport default PageAmount;\n","import React from \"react\";\nimport TickerInput from \"./TickerInput\";\nimport PageList from \"./PageList\";\nimport StockList from \"./StockList\";\nimport PageAmount from \"./PageAmount\";\nimport { useSelector } from \"react-redux\";\n\nfunction Main() {\n  const loading = useSelector((state) => state.stock.loading);\n  const error = useSelector((state) => state.stock.error);\n  const lowdate = useSelector((state) => state.input.lowdate);\n  const highdate = useSelector((state) => state.input.highdate);\n  return (\n    <div>\n      <TickerInput />\n      <p className=\"red\">{error}</p>\n      <br />\n      {lowdate && highdate ? (\n        <div>\n          <PageAmount />\n          <p>\n            Currently showing data from <strong>{lowdate}</strong> through{\" \"}\n            <strong>{highdate}</strong>\n          </p>\n          {loading ? (\n            \"Loading Results...\"\n          ) : (\n            <div>\n              <PageList />\n              <StockList />\n            </div>\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/sampleinput.62c2d654.png\";","export default __webpack_public_path__ + \"static/media/sampleoutput.a38f6089.png\";","import React from \"react\";\nimport sampleinput from \"../images/sampleinput.png\";\nimport sampleoutput from \"../images/sampleoutput.png\";\n\nfunction About() {\n  return (\n    <div>\n      <p>\n        Get charts for a list of stocks on a single page ranked by return on\n        investment between the date range of your choice.\n      </p>\n      <h2>Sample Input</h2>\n      <img alt=\"Sample Input\" src={sampleinput} />\n      <h2>Sample Output</h2>\n      <img alt=\"Sample Output\" src={sampleoutput} />\n    </div>\n  );\n}\n\nexport default About;\n","import \"./App.css\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport Main from \"./components/Main\";\nimport { Routes, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Stock Charts</h1>\n      <Link to=\"/about\">\n        <div className=\"help-icon\">?</div>\n      </Link>\n      <Routes>\n        <Route path=\"/\" element={<Main />}></Route>\n        <Route path=\"/about\" element={<About />}></Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport inputReducer from \"../slices/inputSlice\";\nimport stockReducer from \"../slices/stockSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    input: inputReducer,\n    stock: stockReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./storeConfig/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}